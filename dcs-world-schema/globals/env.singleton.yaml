globals:
  env:
    kind: singleton
    description: "Provides functions for logging and accessing mission environment data in the DCS World scripting environment. All logging messages are written to the dcs.log file in the user's Saved Games folder."
    static:
      info:
        description: "Writes an informational message to the DCS log file, with an optional in-game notification popup."
        params:
          - name: message
            type: string
            description: "Text content to write to the log file."
          - name: showMessageBox
            type: boolean
            description: "`true` to display an in-game popup with the message, `false` to log silently."
            optional: true
        returns: nil
      warning:
        description: "Writes a warning message to the DCS log file, with an optional in-game notification popup."
        params:
          - name: message
            type: string
            description: "Text content to write to the log file."
          - name: showMessageBox
            type: boolean
            description: "`true` to display an in-game popup with the message, `false` to log silently."
            optional: true
        returns: nil
      error:
        description: "Writes an error message to the DCS log file, with an optional in-game notification popup."
        params:
          - name: message
            type: string
            description: "Text content to write to the log file."
          - name: showMessageBox
            type: boolean
            description: "`true` to display an in-game popup with the message, `false` to log silently."
            optional: true
        returns: nil
      setErrorMessageBoxEnabled:
        description: "Configures whether Lua runtime errors generate in-game popup notifications."
        params:
          - name: enabled
            type: boolean
            description: "`true` to display error message boxes for Lua errors, `false` to suppress them."
        returns: nil
      getValueDictByKey:
        description: "Retrieves a value from the mission dictionary using the specified key."
        params:
          - name: key
            type: string
            description: "Dictionary key to look up in the mission environment."
        returns: any
      showTraining:
        description: "Shows the training interface. Note: Undocumented function in the DCS API."
        params: []
        returns: nil
    properties:
      mission:
        type: table
        description: "Table containing the complete mission data structure as defined in the mission file."
      warehouses:
        type: table
        description: "Table containing the complete warehouse inventory data structure for the current mission."
    instance: {}
types:
  env.Mode:
    kind: enum
    description: "Enumerator for mission execution lifecycle states, used to determine the current operational phase of a mission in the DCS World environment."
    values:
      INIT: 0
      USER: 1
      START: 2
      SIMULATION: 4
      STOP: 5
      FINISH: 6